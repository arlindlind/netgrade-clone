name: iOS TestFlight Release

on:
  push:
    tags:
      - 'v*' # e.g. "v1.0.0", "v20250321" etc.

jobs:
  build-and-upload:
    runs-on: macos-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # or whichever version you want

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --path vendor/bundle || bundle install

      - name: Calculate release version
        id: version
        run: |
          SHORT_SHA="${GITHUB_SHA:0:7}"                  # e.g. abc1234
          DATE_PART=$(date +%Y%m%d)                      # e.g. 20250321
          BUILD_NUM="${GITHUB_RUN_NUMBER}"               # GH's unique run number
          RELEASE_VERSION="${DATE_PART}-${SHORT_SHA}-${BUILD_NUM}"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Decode & import certificate
        # We'll store the decoded P12 as 'dist.cer' and provisioning profile as 'app.mobileprovision'
        run: |
          echo "$APPLE_DIST_CERT_P12" | base64 --decode > dist.p12
          echo "$IOS_PROVISION_PROFILE" | base64 --decode > app.mobileprovision

          # Create a temporary keychain
          security create-keychain -p "" build.keychain
          security unlock-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security set-keychain-settings -lut 7200 build.keychain

          # Import the p12
          security import dist.p12 -k build.keychain -P "$APPLE_DIST_CERT_PASS" -T /usr/bin/codesign

          # Move the provisioning profile to Library
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp app.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          APPLE_DIST_CERT_P12: ${{ secrets.APPLE_DIST_CERT_P12 }}
          IOS_PROVISION_PROFILE: ${{ secrets.IOS_PROVISION_PROFILE }}
          APPLE_DIST_CERT_PASS: ${{ secrets.APPLE_DIST_CERT_PASS }}

      - name: Build & Upload to TestFlight
        run: |
          echo "Using RELEASE_VERSION=$RELEASE_VERSION"
          bundle exec fastlane ios release version:$RELEASE_VERSION
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
          # If using Apple ID + password:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APPLE_ID }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
